# ==========================
#  boringOS /etc/portage/make.conf
#  Optimized for not being boring!
# ==========================

# For fastest code, not boring!
CFLAGS="-march=native -O2 -pipe -flto"
# Uncomment below line to enable more generic code for different CPU's, so boring!
# CFLAGS="-march=x86-64-v3 -mtune=znver1 -O2 -pipe -flto"
# Only enable one of these CFLAGS blocks at a time!

CXXFLAGS="${CFLAGS}"
FCFLAGS="${CFLAGS}"
FFLAGS="${CFLAGS}"

# Link Time Optimization (LTO)
LDFLAGS="-Wl,-O1 -Wl,--as-needed"

# For maximum compatibility with all x86-64-v3 CPUs:
CPU_FLAGS_X86="mmx mmxext sse sse2 sse3 ssse3 sse4_1 sse4_2 avx avx2 fma3 bmi1 bmi2 popcnt"

# For post-v3 CPUs with more features (VAES, GFNI, etc) but no AVX-512 (most AMD and recent Intel consumer chips):
# CPU_FLAGS_X86="mmx mmxext sse sse2 sse3 ssse3 sse4_1 sse4_2 avx avx2 fma3 bmi1 bmi2 popcnt aes sha vpclmulqdq pclmul rdrand vaes gfni"

# Uncomment and use the following for x86-64-v4 (cutting edge, not universally supported. I mean it. 
# New Intel chips *removed* AVX-512 support, so binaries may not even run on "new" hardware! AMD fans should be fine):
# CPU_FLAGS_X86="mmx mmxext sse sse2 sse3 ssse3 sse4_1 sse4_2 avx avx2 avx512f avx512dq avx512cd avx512bw avx512vl avx512vbmi avx512vnni avx512vbmi2 avx512bitalg avx512vpopcntdq avx512ifma fma3 bmi1 bmi2 popcnt sha aes vpclmulqdq pclmul rdrand"

# Need v2? You’re on your own!
# I won’t support it and performance will be, honestly, really boring.
# (Unless you enjoy waiting 5 days for Chromium to compile…)
# For true legacy/compatibility builds only:
# CPU_FLAGS_X86="mmx mmxext sse sse2 sse3 ssse3 sse4_1 sse4_2 avx fma3 bmi1 bmi2 popcnt"
# Use -march=native on host or just modify -march=x86-64-v3 to v2.
# Since you are using a source-based distribution and editing config files with a terminal editor,
# I'll trust you to make that tweak!

# Accept keyworded versions for newer ROCm/CUDA support
ACCEPT_KEYWORDS="amd64 ~amd64"

# Parallel build
MAKEOPTS="-j$(nproc)"

# Default system-wide USE flags
USE="X a52 aac alsa amd amf apparmor avif bluray bash-completion bluetooth
     cddb clang codec2 compat cuda cups dav1d dbus dist-kernel dts dvd dvb
     egl elogind exif faad ffmpeg flac flatpak gdk-pixbuf gif gles2 gnome
     gsf gtk gtk4 hip intel jack jack-sdk jpeg jpeg2k jpegxl
     lame libass libaom llvm lto mad matroska modules-sign mp3 mpeg multilib
     musepack nvidia nvidia-drivers nvenc ogg opencl opengl openh264
     openmp opus pipewire pipewire-alsa png policykit postproc pulseaudio
     qtmedia qsv rav1e readline rocm samba speex srt suid svg svt-av1 symlink
     systemd theora threads tiff twolame udisks udev unicode usb vaapi verify-sig
     video_cards_amdgpu video_cards_intel video_cards_nvidia vorbis vulkan vpx
     wavpack wayland webp x264 x265 xmp xvid zimg zlib zstd"

# ROCm target (optional if using ROCm toolchain directly)
ROCM_TARGETS="gfx900 gfx906 gfx908 gfx90a gfx1010 gfx1030 gfx1100"

# CUDA settings
CUDA_TARGETS="nvcc"

# LLVM targets for Clang/ROCm/HIP
LLVM_TARGETS="AMDGPU NVPTX X86"

GENTOO_MIRRORS="https://mirror.aarnet.edu.au/pub/gentoo/"
